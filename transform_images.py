# -*- coding: utf-8 -*-
"""Transform_images.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17EWWmoFYg2qqxrWsPrJxYaDRot7I_COL
"""

import cv2

def convert_to_grayscale_opencv(input_image_path, output_image_path):
    """
    Converte uma imagem colorida para tons de cinza usando OpenCV e salva o resultado.

    Args:
        input_image_path (str): Caminho para a imagem original.
        output_image_path (str): Caminho para salvar a imagem em tons de cinza.
    """
    img = cv2.imread(input_image_path)
    grayscale_img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)  # Converte para tons de cinza
    cv2.imwrite(output_image_path, grayscale_img)
    print(f"Imagem em tons de cinza salva em {output_image_path}")

def convert_to_binary_opencv(input_image_path, output_image_path, threshold=128):
    """
    Converte uma imagem colorida para preto e branco (binarizada) usando OpenCV e salva o resultado.

    Args:
        input_image_path (str): Caminho para a imagem original.
        output_image_path (str): Caminho para salvar a imagem binarizada.
        threshold (int): Valor do limiar para binarização (padrão é 128).
    """
    img = cv2.imread(input_image_path)
    grayscale_img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)  # Converte para tons de cinza
    _, binary_img = cv2.threshold(grayscale_img, threshold, 255, cv2.THRESH_BINARY)
    cv2.imwrite(output_image_path, binary_img)
    print(f"Imagem binarizada salva em {output_image_path}")

# Exemplo de uso
convert_to_grayscale_opencv("imagem_colorida.jpg", "imagem_cinza.jpg")
convert_to_binary_opencv("imagem_colorida.jpg", "imagem_binarizada.jpg")